#!/bin/sh
# Start/stop ceph daemons

# if we start up as ./ceph-daemons, assume everything else is in the
# current directory too.
if [ `dirname $0` = "." ] && [ $PWD != "/etc/init.d" ]; then
    BINDIR=.
    LIBDIR=.
    ETCDIR=.
else
    BINDIR=/usr/bin
    LIBDIR=/usr/lib/ceph
    ETCDIR=/etc/ceph
fi

CCONF="$BINDIR/cconf"
conf=$ETCDIR"/startup.conf"
cluster_conf=$ETCDIR"/cluster.conf"
ARGS="-f"

# get hostname, minus any domain
hostname=`hostname | cut -d . -f 1`

. $LIBDIR/ceph_common.sh

usage_exit() {
    echo "usage: $0 [options] {start|stop|restart} [mon|osd|mds]..."
    printf "\t-c conffile.conf\n"
    printf "\t--valgrind\trun via valgrind\n"
    exit
}

stop_daemon() {
    name=$1
    daemon=$2
    pidfile=$3
    echo -n "Stopping ceph $name on $host..."
    while [ 1 ]; do
	[ -e $pidfile ] || break
	pid=`cat $pidfile`
	while [ -e /proc/$pid ] && grep -q $daemon /proc/$pid/cmdline ; do
	    cmd="kill $pid"
	    [[ $host != $hostname ]] && cmd="ssh $host $cmd"
	    echo -n $cmd...
	    $cmd
	    sleep 1
	    continue
	done
	break
    done
    echo done
}

## command line options
options=
valgrind=
localhost=
debug=
restartoncoredump=
monaddr=
allhosts=0

while [[ $1 =~ '-' ]]; do     # FIXME: why not '^-'?
case $1 in
    --valgrind)
	    valgrind=1
	    ;;
    --novalgrind)
	    valgrind=0
	    ;;
    -l | --localhost )
	    localhost=1
	    ;;
    --allhosts)
	    allhosts=1;
	    ;;
    -m )
	    [ "$2" == "" ] && usage_exit
	    options="$options $1"
	    shift
	    MON_ADDR=$1
	    ;;
    --conf_file | -c)
	    [ "$2" == "" ] && usage_exit
	    options="$options $1"
	    shift
	    conf=$1
	    ;;
    *)
	    echo unrecognized option \'$1\'
	    usage_exit
	    ;;
esac
options="$options $1"
shift
done

command=$1
shift
what="$@"

if [[ $what = "" ]]; then
    # extract list of monitors, mdss, osds defined in startup.conf
    what=`$CCONF -c $conf -l mon | egrep -v '^mon$' ; \
	$CCONF -c $conf -l mds | egrep -v '^mds$' ; \
	$CCONF -c $conf -l osd | egrep -v '^osd$'`
fi

for name in $what; do
    type=`echo $name | cut -c 1-3`   # e.g. 'mon', if $item is 'mon1'
    num=`echo $name | cut -c 4-`
    sections="$name $type global"

    # this host?
    host=`$CCONF -c $conf -s $name -s $type -s global host`
    ssh=""
    cmd=""
    if [[ $host != "" ]]; then
	#echo host for $name is $host, i am $hostname
	if [[ $host != $hostname ]]; then
	    # skip, unless we're starting remote daemons too
	    if [[ $allhosts -eq 0 ]]; then
		continue;
	    fi

	    # we'll need to ssh into that host
	    ssh="ssh root@$host"
	    cd_path=`$CCONF -c $conf -s $name -s $type -s global "ssh path"`
	fi
    else
	host=$hostname
    fi

    get_conf pid_file "/var/run/ceph/$name.pid" "pid file" $sections
    get_conf conf_file "$cluster_conf" "conf file" $sections
    get_conf mon_addr "$monaddr" "mon addr" $sections
    [ "$mon_addr" != "" ] && mon_addr_cmd="-m $mon_addr"
    # extract name-specific options from $conf
    if [[ $name =~ "mon" ]]; then
	get_conf mon_path "" "mon path" $sections
	cmd="$ssh $cd_path $CEPH_BIN/crun $valgrind $CEPH_BIN/cmon $ARGS $mon_path &"
    fi

    if [[ $name =~ "mds" ]]; then
	cmd="$ssh $cd_path $CEPH_BIN/crun $valgrind $CEPH_BIN/cmds $ARGS --conf_file $conf_file \
			$mon_addr_cmd &"
    fi

    if [[ $name =~ "osd" ]]; then
	get_conf osd_data "" "osd data" $sections
	get_conf osd_journal "" "osd journal" $sections
	[ "$osd_journal" != "" ] && osd_journal_cmd="-j $osd_journal" || osd_journal_cmd=""
	cmd="$ssh $cd_path $CEPH_BIN/crun $valgrind $CEPH_BIN/cosd $ARGS --conf_file $conf_file \
			$mon_addr_cmd $osd_data $osd_journal_cmd &"
    fi

    case "$command" in
	start)
	    echo Starting ceph $name on $host...
	    echo $cmd
            eval $cmd
	    ;;
	
	stop)
	    stop_daemon $name c$type $pid_file
	    ;;
	
	restart)
	    $0 $options stop $name
	    $0 $options start $name
	    ;;
	
	*)
	    usage_exit
	    ;;
    esac
done

exit 0
